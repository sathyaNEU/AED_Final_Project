/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.AARole;

import business.Business;
import business.Enterprise.AppLogBusiness.Item;
import business.Enterprise.AppLogBusiness.Pkg;
import business.Organization.Organization;
import business.UserAccount.UserAccount;
import business.WorkQueue.CustomsWorkRequest;
import java.awt.CardLayout;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import ErrorHelper.ErrorHelper;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Sathya
 */
public class ValidateItemsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ValidateItemsJPanel
     */
    JPanel userProcessContainer;
    UserAccount account;
    Organization organization;
    Business business;
    CustomsWorkRequest request;
    Pkg pkg;
    ArrayList<Item> items;
    String rejectedItems;

    public ValidateItemsJPanel(JPanel userProcessContainer, UserAccount account, Organization organization, Business business, CustomsWorkRequest request) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.account = account;
        this.organization = organization;
        this.business = business;
        this.request = request;
        this.pkg = request.getPkg();
        this.items = this.pkg.getItemList().getItemList();
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        btnBack2 = new javax.swing.JButton();
        saveBtn = new javax.swing.JButton();
        acceptBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        itemsTbl = new javax.swing.JTable();
        rejectbtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblTitle.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(255, 255, 255));
        lblTitle.setText("CUSTOMS WORK RESPONSIBILITY");
        add(lblTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 110, -1, -1));

        btnBack2.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        btnBack2.setText("<< BACK");
        btnBack2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBack2ActionPerformed(evt);
            }
        });
        add(btnBack2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 40, -1, -1));

        saveBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        saveBtn.setText("PUSH RESPONSE TO LOGISTICS ENTERPRISE");
        saveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBtnActionPerformed(evt);
            }
        });
        add(saveBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 530, -1, 40));

        acceptBtn.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        acceptBtn.setText("ACCEPT");
        acceptBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acceptBtnActionPerformed(evt);
            }
        });
        add(acceptBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 420, -1, 40));

        itemsTbl.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        itemsTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Item", "Status"
            }
        ));
        jScrollPane1.setViewportView(itemsTbl);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(202, 190, 560, 180));

        rejectbtn.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        rejectbtn.setText("REJECT");
        rejectbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rejectbtnActionPerformed(evt);
            }
        });
        add(rejectbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 420, -1, 40));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ui/AARole/Background.jpg"))); // NOI18N
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1530, 1110));
    }// </editor-fold>//GEN-END:initComponents

    private void btnBack2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBack2ActionPerformed

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBack2ActionPerformed

    private void saveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBtnActionPerformed
        // TODO add your handling code here:
        boolean canContinue = checkIfActionsPerformed();
        if (canContinue) {
            this.pkg.setStatus(6);
            getRejectedItems();
            this.request.setResult(rejectedItems);
            this.request.setStatus("Completed");
            this.request.setResolveDate(new Date());
            JOptionPane.showMessageDialog(this, "Response forwarded back to logistic enterprise");
        } else {
            ErrorHelper.showError("Items not thoroughly reviewed");
        }


    }//GEN-LAST:event_saveBtnActionPerformed

    private void acceptBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acceptBtnActionPerformed
        // TODO add your handling code here:
        int index = itemsTbl.getSelectedRow();
        if (index == -1) {
            ErrorHelper.showWarning("Row not selected");
        } else {
            this.items.get(index).setStatus("Accepted");
            populateTable();
        }

    }//GEN-LAST:event_acceptBtnActionPerformed

    private void rejectbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rejectbtnActionPerformed
        // TODO add your handling code here:
        int index = itemsTbl.getSelectedRow();
        if (index == -1)
            ErrorHelper.showWarning("Row not selected");
        else {
            this.items.get(index).setStatus("Rejected");
            populateTable();
        }
    }//GEN-LAST:event_rejectbtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton acceptBtn;
    private javax.swing.JButton btnBack2;
    private javax.swing.JTable itemsTbl;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JButton rejectbtn;
    private javax.swing.JButton saveBtn;
    // End of variables declaration//GEN-END:variables

    public void populateTable() {
        DefaultTableModel dtm = (DefaultTableModel) this.itemsTbl.getModel();
        dtm.setRowCount(0);
        for (Item item : this.items) {
            Object[] obj = new Object[2];
            obj[0] = item.getItem();
            obj[1] = item.getStatus()==null?"No Actions Performed":item.getStatus();
            dtm.addRow(obj);
        }
    }

    private boolean checkIfActionsPerformed() {
        int counter = 0;
        for (Item item : this.items) {
            if (item.getStatus().equalsIgnoreCase("No Actions Performed")) {
                counter += 1;
            }
        }
        if (counter == 0) {
            return true;
        }
        return false;
    }

    private void getRejectedItems() {
        this.rejectedItems="";
        for (Item item : this.items) {
            if (item.getStatus().equalsIgnoreCase("Rejected")) {
                this.rejectedItems = this.rejectedItems.concat(item.getItem()).concat(" , ");
            }
        }
        if (this.rejectedItems == null) {
            this.rejectedItems = "Customs Cleared";
        } else {
            String x="Customs Cleared with following Items discarded";
            this.rejectedItems = x.concat(rejectedItems);
            this.rejectedItems.substring(0, this.rejectedItems.length() - 2);
        }
        System.out.println(this.rejectedItems);
    }
}
